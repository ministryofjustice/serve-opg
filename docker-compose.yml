version: '3'
services:
  aws:
    image: infrastructureascode/aws-cli
    #    Setting here rather than .env to stop them being overwritten during build steps on prod
    environment:
      - AWS_ACCESS_KEY_ID=foo
      - AWS_SECRET_ACCESS_KEY=bar
    entrypoint:
      - aws
    working_dir: /var/www
    volumes:
      - ./serve-web:/var/www
    depends_on:
      - localstack

  loadbalancer:
    image: jwilder/nginx-proxy:0.9.3-alpine
    ports:
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./serve-web/certs:/etc/nginx/certs
      - ./serve-web/docker/loadbalancer/my_proxy.conf:/etc/nginx/conf.d/my_proxy.conf:ro
    depends_on:
      - web
    environment:
      DHPARAM_GENERATION: "false"
      DEFAULT_HOST: localhost
      CERT_NAME: web.crt

  api:
    build:
      context: ./serve-api
      dockerfile: docker/Dockerfile.dev
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/serve-opg/api:latest
    ports:
      - 9090:9090

  web:
    build:
      context: ./serve-web
      dockerfile: docker/web/Dockerfile
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/serve-opg/web:latest
    depends_on:
      - app
    environment:
      APP_HOST: app
      APP_PORT: 9000
      NGINX_LOG_LEVEL: warn
      VIRTUAL_HOST: web
    volumes:
      - ./serve-web/public:/var/www/public

  app:
    build:
      context: ./serve-web
      dockerfile: docker/app/Dockerfile
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/serve-opg/app:latest
    ports:
      - 9000:9000
    env_file:
      - .env
    #    Setting here rather than .env to stop them being overwritten during build steps on prod
    environment:
      - APP_SECRET=aFakeSecret
      - AWS_ACCESS_KEY_ID=foo
      - AWS_SECRET_ACCESS_KEY=bar
      - BEHAT_PASSWORD=Abcd1234
      - DC_S3_ENDPOINT=http://localstack:4566
      - DYNAMODB_ENDPOINT=http://localstack:4566
      - FIXTURES_ENABLED=true
      - OS_PLACES_API_KEY=DUMMY_KEY
      - SIRIUS_PUBLIC_API_PASSWORD=FAKE_API_PASSWORD
    depends_on:
      - localstack
      - postgres
      - sirius-api
      - api

  sirius-api:
    image: stoplight/prism:4.4.1
    ports:
      - 4010:4010
    volumes:
      - ./serve-web:/tmp
    command:
      - mock
      - /tmp/api.public.v1.yaml
      - -h
      - 0.0.0.0
      - --dynamic

  localstack:
    image: localstack/localstack:0.14.5
    environment:
      - SERVICES=s3,dynamodb
      - DATA_DIR=/tmp/localstack/data
      - DEFAULT_REGION=eu-west-1
    ports:
      - "4566:4566"
    volumes:
      - ./serve-web/localstack-data:/tmp/localstack/data

  postgres:
    image: postgres
    build: ./serve-api/internal/db
    ports:
      - 5432:5432
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: serve-opg
      POSTGRES_USER: serve-opg
      POSTGRES_PASSWORD: dcdb2018!
      POSTGRES_API_DB_USER: serve-opg-api

  yarn:
    image: node:16-alpine
    environment:
      PATH: /node_modules/.bin:$PATH
    working_dir: /var/www
    volumes:
      - ./serve-web/node_modules:/var/www/node_modules
      - ./serve-web:/var/www
    entrypoint: [ "yarn" ]

  behat:
    image: php:8.1.18-fpm-alpine
    volumes:
      - ./serve-web:/var/www
      - ./serve-web/tests/artifacts/behat/screenshots:/tmp/behat
    working_dir: /var/www
    entrypoint:
      - vendor/bin/behat
      - -c
      - behat.yml.dist
      - --suite=local
      - --stop-on-failure
      - --no-interaction
    env_file:
      - .env
    environment:
      APP_ENV: 'test'
      BEHAT_PARAMS: '{"extensions" : {"Behat\\MinkExtension" : {"base_url" : "https://loadbalancer"}}}'
      BEHAT_PASSWORD: 'Abcd1234'

  qa:
    image: jakzal/phpqa:alpine
    volumes:
      - ./serve-web:/var/www:ro
    working_dir: /var/www

  waitforit:
    build:
      context: ./serve-web
      dockerfile: docker/waitforit/Dockerfile
