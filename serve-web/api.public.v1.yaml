openapi: 3.0.0
info:
  version: 1.0.0
  title: Sirius Public API
  description: Sirius API endpoint allowing posting of Court of Protection documents and
    metadata directly into Sirius
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  /health-check/service-status:
    summary: healthcheck
    description: >
      **NOTE** this endpoint is not guaranteed in the upstream contract, but is
      added locally as it's essential functionality
    get:
      responses:
        "200":
          headers:
            X-XSRF-TOKEN:
              schema:
                type: string
          description: CSRF token that is required for subsequent requests to Sirius
  /old-login:
    post:
      description: >
        **NOTE** this endpoint is not guaranteed in the upstream contract, but
        is added locally as it's essential functionality
      responses:
        "200":
          headers:
            X-XSRF-TOKEN:
              schema:
                type: string
                example: pKxFAyMS+YXhuDuXB7TlhA==
          description: CSRF token that is required for subsequent requests to Sirius
  /auth/logout:
    summary: log out
    description: >
      **NOTE** this endpoint is not guaranteed in the upstream contract, but is
      added locally as it's essential functionality
    get:
      responses:
        "401":
          headers:
            X-XSRF-TOKEN:
              schema:
                type: string
          description: >
            Returned on logout to invalidate the session. Also provides a fresh
            CSRF token that is required for subsequent requests to Sirius.
  /api/public/v1/orders:
    post:
      description: Creates a new Client, order and deputies in Sirius and attaches a set of
        documents to the order. Each request must use a unique CASREC number
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
        description: Order and related entities to create in Sirius
        required: true
      responses:
        "201":
          description: The Sirius specific ids of all the entities created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SirisIds"
        "400":
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
servers:
  - url: /api/public/v1
components:
  schemas:
    Order:
      required:
        - courtReference
        - type
        - subType
        - date
        - issueDate
        - appointmentType
        - client
        - deputies
        - documents
      properties:
        courtReference:
          type: string
          description: Alphanumeric court reference matching either 8 digits or 7 followed
            by 'T'. Must be valid against a Modulus 11/ISBN 10 checksum
            https://en.wikipedia.org/wiki/Check_digit#ISBN_10. The combination
            of this and the type must be unique
          example: 61429461
          minLength: 8
          maxLength: 8
        type:
          type: string
          enum:
            - HW
            - PF
          description: The type of order to create against the client. The combination of
            this and the court reference must be unique
          example: PF
        subType:
          type: string
          enum:
            - NEW_APPLICATION
            - REPLACEMENT_OF_DISCHARGED_DEPUTY
            - INTERIM_ORDER
            - TRUSTEE
            - VARIATION
            - DIRECTION
          description: Order subtype. Indicates whether the case will be supervised
          example: NEW_APPLICATION
        date:
          type: string
          format: date
          description: The date the order was created
          example: 2018-06-10
        issueDate:
          type: string
          format: date
          description: The date the order was issued
          example: 2018-07-12
        appointmentType:
          type: string
          enum:
            - SOLE
            - JOINT
            - JOINT_AND_SEVERAL
          description: How deputies are appointed
          example: SOLE
        assetLevel:
          type: string
          enum:
            - LOW
            - HIGH
          description: Only valid for Property & Finance orders. Set to HIGH if the bond or
            assets are above Â£21,000 otherwise set to LOW
          example: HIGH
        client:
          $ref: "#/components/schemas/Client"
        deputies:
          type: array
          items:
            $ref: "#/components/schemas/Deputy"
          description: The deputy or deputies that will be acting on behalf of the client
        documents:
          type: array
          items:
            $ref: "#/components/schemas/Document"
          description: The full list of Court of Protection documents that support the new
            order
    Client:
      type: object
      required:
        - firstName
        - lastName
      properties:
        firstName:
          type: string
          description: The client's first name
          example: Peter
          maxLength: 255
        lastName:
          type: string
          description: The client's last name
          example: Bloggs
          maxLength: 255
    Deputy:
      type: object
      required:
        - type
        - firstName
        - lastName
      properties:
        type:
          type: string
          enum:
            - LAY
            - PUBLIC_AUTHORITY
            - PROFESSIONAL
          description: The type of the deputy. Determines the supervision level
          example: LAY
        firstName:
          type: string
          description: The deputy's first name
          example: Ian
          maxLength: 255
        lastName:
          type: string
          description: The deputy's last name
          example: Deputy
          maxLength: 255
        dob:
          type: string
          format: date
          description: The deputy's date of birth
        email:
          type: string
          description: The deputy's contact email address
          maxLength: 255
        daytimeNumber:
          type: string
          description: The number to call the deputy on in the day
          maxLength: 255
        eveningNumber:
          type: string
          description: The number to call the deputy on in the evening
          maxLength: 255
        mobileNumber:
          type: string
          description: The deputy's mobile number
          maxLength: 255
        addressLine1:
          type: string
          description: The first line of the deputy's address
          maxLength: 255
        addressLine2:
          type: string
          description: The second line of the deputy's address
          maxLength: 255
        addressLine3:
          type: string
          description: The third line of the deputy's address
          maxLength: 255
        town:
          type: string
          description: The deputy's town
          maxLength: 255
        county:
          type: string
          description: The deputy's county
          maxLength: 255
        postcode:
          type: string
          description: The deputy's postcode
          maxLength: 255
    Document:
      type: object
      required:
        - type
        - filename
      properties:
        type:
          type: string
          enum:
            - COP1A
            - COP1C
            - COP3
            - COP4
            - COURT_ORDER
            - OTHER
          description: The type of the document supporting the order
        filename:
          type: string
          description: The filename only of the Amazon AWS S3 link to the document file.
            The file itself must be accessible to Sirius
          example: dc_doc_123456_893721928748.pdf
    SirisIds:
      type: object
      required:
        - id
        - client
        - deputies
        - documents
      properties:
        id:
          type: integer
          description: The Sirius id of the created order
        client:
          type: object
          required:
            - id
          properties:
            id:
              type: integer
              description: The Sirius id of the created client
        deputies:
          type: array
          items:
            type: object
            required:
              - id
            properties:
              id:
                type: integer
                description: The Sirius id of the created deputy
        documents:
          type: array
          items:
            type: object
            required:
              - id
            properties:
              id:
                type: integer
                description: The Sirius id of the created document
    Error:
      type: object
      required:
        - validation_errors
        - status
        - detail
      properties:
        validation_errors:
          type: object
          description: All validation errors are returned in this property. There is a
            child property named after the request property that faled
            validation e.g. appointmentType which itself has a property for each
            type of failed validation with a description
        type:
          type: string
          description: a URL to a document describing the error condition (optional, and
            "about:blank" is assumed if none is provided; should resolve to a
            human-readable document; Apigility always provides this)
          example: http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html
        title:
          type: string
          description: a brief title for the error condition (required; and should be the
            same for every problem of the same type; Apigility always provides
            this)
          example: Bad Request
        status:
          type: string
          description: the HTTP status code for the current request (optional; Apigility
            always provides this)
          example: 400
        detail:
          type: string
          description: error details specific to this request (optional; Apigility requires
            it for each problem)
          example: Payload failed validation
        instance:
          type: string
          description: URI identifying the specific instance of this problem (optional;
            Apigility currently does not provide this)
