on:
  workflow_call:
    inputs:
      tag:
        description: 'Version tag for docker images'
        required: true
        type: string

defaults:
  run:
    shell: bash

jobs:
  build_and_push_containers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Extract branch name
        run: |
          if [ "${{ github.head_ref }}" == "" ]; then
            echo BRANCH_NAME=main >> $GITHUB_ENV
          else
            echo BRANCH_NAME=${{ github.head_ref }} >> $GITHUB_ENV
          fi
        id: extract_branch
      - uses: unfor19/install-aws-cli-action@v1
      - name: Build Containers
        run: |
            # Vendor php dependencies
            docker-compose run --rm app composer install --no-interaction
            # install js dependencies
            docker-compose run --rm yarn install --frozen-lockfile
            # Generate static assets
            docker-compose run --rm yarn build
            # Build app
            docker-compose build web
            docker-compose build app
            # Build API
            docker-compose build api

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::311462405659:role/serve-actions-ci
          role-duration-seconds: 3600
          role-session-name: GitHubActions

      - name: ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: 311462405659

      - name: Push Containers
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker tag $ECR_REGISTRY/serve-opg/app:latest $ECR_REGISTRY/serve-opg/app:${{ inputs.tag }}
          docker tag $ECR_REGISTRY/serve-opg/web:latest $ECR_REGISTRY/serve-opg/web:${{ inputs.tag }}
          docker tag $ECR_REGISTRY/serve-opg/api:latest $ECR_REGISTRY/serve-opg/api:${{ inputs.tag }}

          if [ "$BRANCH_NAME" == "main" ]; then
            # We want all of the tags pushed
            docker push --all-tags $ECR_REGISTRY/serve-opg/app
            docker push --all-tags $ECR_REGISTRY/serve-opg/web
            docker push --all-tags $ECR_REGISTRY/serve-opg/api
          else
            docker push $ECR_REGISTRY/serve-opg/app:${{ inputs.tag }}
            docker push $ECR_REGISTRY/serve-opg/web:${{ inputs.tag }}
            docker push $ECR_REGISTRY/serve-opg/api:${{ inputs.tag }}
          fi
