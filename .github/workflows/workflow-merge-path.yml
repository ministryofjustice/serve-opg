name: "[Workflow] Merge Path"

on:
  merge_group:
    branches:
      - main

permissions:
  id-token: write
  contents: write
  security-events: write
  pull-requests: read
  actions: none
  checks: none
  deployments: none
  issues: none
  packages: none
  repository-projects: none
  statuses: none

defaults:
  run:
    shell: bash

jobs:
  workflow_variables:
    runs-on: ubuntu-latest
    name: output workflow variables
    outputs:
      build_identifier: "main"
      version_tag: ${{ steps.semver_tag.outputs.created_tag }}
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Get Default Bump
        id: semver_bump
        run: |
          export bump=$(./scripts/default_bump/bump.sh)
          echo "Default Bump: ${bump}"
          echo "default_bump=$(echo ${bump})" >> $GITHUB_OUTPUT

      - name: generate semver tag and release
        id: semver_tag
        uses: ministryofjustice/opg-github-actions/.github/actions/semver-tag@ea1e81f43e7593acd74cc114085930f5f54914a2 # v3.1.7
        with:
          prerelease: true
          default_bump: ${{ steps.semver_bump.outputs.default_bump }}

  unit_test_frontend:
    name: Unit tests on Frontend app
    uses: ./.github/workflows/_tests-frontend.yml

  build_scan_push_containers:
    name: Docker Build, Scan and Push
    uses: ./.github/workflows/_build-push.yml
    needs: [workflow_variables]
    with:
      tag: ${{ needs.workflow_variables.outputs.version_tag }}
      branch_name: ${{ needs.workflow_variables.outputs.build_identifier }}
    secrets: inherit

  deploy_to_development_account:
    name: Deploy to Development
    needs: [
      workflow_variables,
      build_scan_push_containers,
      unit_test_frontend
    ]
    uses: ./.github/workflows/_deploy-infrastructure.yml
    with:
      workspace: development
      account_name: development
      container_version: ${{ needs.workflow_variables.outputs.version_tag }}
      terraform_path: account
      apply: true
      path_to_live: true
    secrets: inherit

  deploy_to_preproduction_account:
    name: Deploy to Preproduction Account
    needs: [
      workflow_variables,
      deploy_to_development_account
    ]
    uses: ./.github/workflows/_deploy-infrastructure.yml
    with:
      workspace: preproduction
      account_name: preproduction
      container_version: ${{ needs.workflow_variables.outputs.version_tag }}
      terraform_path: account
      apply: true
      path_to_live: true
    secrets: inherit

  deploy_to_preproduction_environment:
    name: Deploy to Preproduction Environment
    needs: [
      workflow_variables,
      deploy_to_preproduction_account
    ]
    uses: ./.github/workflows/_deploy-infrastructure.yml
    with:
      workspace: preproduction
      account_name: preproduction
      container_version: ${{ needs.workflow_variables.outputs.version_tag }}
      terraform_path: environment
      apply: true
      path_to_live: true
    secrets: inherit

  behat_preproduction:
    name: Preproduction Behat Tests
    uses: ./.github/workflows/_tests-behat.yml
    needs: [
      workflow_variables,
      deploy_to_preproduction_environment,
    ]
    with:
      workspace_name: preproduction
      version_tag: ${{ needs.workflow_variables.outputs.version_tag }}
      base_url: preproduction.serve.opg.service.justice.gov.uk
      sirius_api_bucket: opg-backoffice-public-api-preprod
      suite: --suite=main
      account_name: preproduction
      account_id: 540070264006
    secrets: inherit
  
  tag_releasable:
    name: Tag image as releasable
    runs-on: ubuntu-latest
    needs: [behat_preproduction]
    if: ${{ success() }}
    steps:
      - name: Configure AWS credentials for ECR tagging
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::311462405659:role/serve-gh-actions-ecr-push
          role-session-name: github-actions-ecr-tagger
          role-duration-seconds: 900
      - name: Tag tested image as releasable
        env:
          VERSION_TAG: ${{ needs.workflow_variables.outputs.version_tag }}
        run: |
          REPO="serve-opg/web"
          echo "Tagging $VERSION_TAG as releasable..."
          aws ecr put-image --repository-name "$REPO" --image-tag "releasable" --image-manifest "$(aws ecr batch-get-image --repository-name "$REPO" --image-ids imageTag=$VERSION_TAG --query 'images[0].imageManifest' --output text)"