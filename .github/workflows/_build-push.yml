on:
  workflow_call:
    inputs:
      branch_name:
        description: "Name of the branch doing the build"
        required: true
        type: string
      tag:
        description: "Tag for docker image"
        required: false
        default: "latest"
        type: string

defaults:
  run:
    shell: bash

jobs:
  build_and_push_containers:
    strategy:
      fail-fast: false
      matrix:
        include:
          -   svc_name: "app"
          -   svc_name: "web"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: install aws cli
        uses: unfor19/install-aws-cli-action@e8b481e524a99f37fbd39fdc1dcb3341ab091367 # v1

      - name: Build Containers
        env:
            APP_HOST_LOCAL_ENV: 127.0.0.1
            APP_PORT_LOCAL_ENV: 9000
            CONTAINER: ${{ matrix.svc_name }}
        run: |
          # Create composer and JS dependencies
          docker compose run --rm app composer install --no-interaction
          docker compose run --rm yarn install --frozen-lockfile
          docker compose run --rm yarn build
          # Build all apps
          docker compose build ${CONTAINER}

      - name: Configure OIDC AWS Credentials
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::311462405659:role/serve-gh-actions-ecr-push
          role-duration-seconds: 900
          role-session-name: ga-ecr-push-serve

      - name: ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registries: 311462405659

      - name: trivy image scanning
        id: trivy_scan_app
        uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5 # v0.30.0
        with:
          image-ref: ${{ steps.login-ecr.outputs.registry }}/serve-opg/${{ matrix.svc_name }}:latest
          severity: "HIGH,CRITICAL"
          format: "sarif"
          scanners: "vuln"
          output: "trivy-results.sarif"
          timeout: 15m
        env:
          TRIVY_DB_REPOSITORY: ${{ steps.login-ecr.outputs.registry }}/trivy-db-public-ecr/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: ${{ steps.login-ecr.outputs.registry }}/trivy-db-public-ecr/aquasecurity/trivy-java-db

      - name: upload trivy scan results to security tab
        id: trivy_upload_sarif_app
        uses: github/codeql-action/upload-sarif@70df9def86d22bf0ea4e7f8b956e7b92e7c1ea22 # v2.20.7
        with:
          sarif_file: "trivy-results.sarif"
          
      - name: Generate SBOM
        if: inputs.branch_name == 'main'
        run: mkdir -p sboms && trivy image --format spdx --output sboms/sbom-${{ matrix.svc_name }}.spdx.json ${CONTAINER}:latest

      - name: Upload SBOM
        if: inputs.branch_name == 'main'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: sbom-${{ matrix.svc_name }}
          path: sboms/sbom-${{ matrix.svc_name }}.spdx.json

      - name: Show build tag
        env:
          IMAGE_TAG: ${{ inputs.tag }}
        run: echo "Tag to use - ${IMAGE_TAG}"

      - name: Push Containers
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          BRANCH_NAME: ${{ inputs.branch_name }}
          TAG: ${{ inputs.tag }}
          CONTAINER: ${{ matrix.svc_name }}
        run: |
          echo "Running on branch $BRANCH_NAME"
          docker tag ${ECR_REGISTRY}/serve-opg/${CONTAINER}:latest ${ECR_REGISTRY}/serve-opg/${CONTAINER}:${TAG}

          if [ "$BRANCH_NAME" == "main" ]; then
            docker tag ${ECR_REGISTRY}/serve-opg/${CONTAINER}:latest ${ECR_REGISTRY}/serve-opg/${CONTAINER}:main-${TAG}
            echo "Pushing all tags as on branch: $BRANCH_NAME"
            docker push --all-tags ${ECR_REGISTRY}/serve-opg/${CONTAINER}
          else
            echo "Pushing branch $BRANCH_NAME tags only"
            docker push ${ECR_REGISTRY}/serve-opg/${CONTAINER}:${TAG}
          fi
