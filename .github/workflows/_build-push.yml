on:
  workflow_call:
    inputs:
      branch_name:
        description: "Name of the branch doing the build"
        required: true
        type: string
      tag:
        description: "Tag for docker image"
        required: false
        default: "latest"
        type: string

defaults:
  run:
    shell: bash

jobs:
  build_and_push_containers:
    if: ${{ github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: install aws cli
        uses: unfor19/install-aws-cli-action@27d6061dae5d39e89be4d2246824f15e111a7e06

      - name: Build Containers
        run: |
          # Create composer and JS dependencies
          docker compose run --rm app composer install --no-interaction
          docker compose run --rm yarn install --frozen-lockfile
          docker compose run --rm yarn build
          # Build all apps
          docker compose build web app

      - name: Configure OIDC AWS Credentials
        uses: aws-actions/configure-aws-credentials@132df1605ae82e618724f3a9ca0129373ac8d869
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::311462405659:role/serve-gh-actions-ecr-push
          role-duration-seconds: 900
          role-session-name: ga-ecr-push-serve

      - name: ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@02faf1a6fcd44930b46d309cc3399a8fee3a240a
        with:
          registries: 311462405659

      - name: Show build tag
        env:
          IMAGE_TAG: ${{ inputs.tag }}
        run: echo "Tag to use - ${IMAGE_TAG}"

      - name: Push Containers
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          BRANCH_NAME: ${{ inputs.branch_name }}
          TAG: ${{ inputs.tag }}
        run: |
          echo "Running on branch $BRANCH_NAME"
          docker tag $ECR_REGISTRY/serve-opg/app:latest $ECR_REGISTRY/serve-opg/app:${TAG}
          docker tag $ECR_REGISTRY/serve-opg/web:latest $ECR_REGISTRY/serve-opg/web:${TAG}

          if [ "$BRANCH_NAME" == "main" ]; then
            docker tag $ECR_REGISTRY/serve-opg/app:latest $ECR_REGISTRY/serve-opg/app:main-${TAG}
            docker tag $ECR_REGISTRY/serve-opg/web:latest $ECR_REGISTRY/serve-opg/web:main-${TAG}
            echo "Pushing all tags as on branch: $BRANCH_NAME"
            docker push --all-tags $ECR_REGISTRY/serve-opg/app
            docker push --all-tags $ECR_REGISTRY/serve-opg/web
          else
            echo "Pushing branch $BRANCH_NAME tags only"
            docker push $ECR_REGISTRY/serve-opg/app:${TAG}
            docker push $ECR_REGISTRY/serve-opg/web:${TAG}
          fi
