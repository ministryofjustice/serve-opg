on:
  workflow_call:
    inputs:
      workspace_name:
        description: "The terraform workspace to target"
        required: true
        type: string
      version_tag:
        description: "Version tag for docker images"
        required: true
        type: string
      base_url:
        description: "Base url to run Behat against"
        required: true
        type: string
      sirius_api_bucket:
        description: "Sirius API bucket to use"
        required: true
        type: string
      suite:
        description: "Test suite to run"
        required: true
        type: string
      account_name:
        description: "Account Name"
        required: true
        type: string
      account_id:
        description: "Account ID"
        required: true
        type: string

jobs:
  run_behat_tests:
    runs-on: ubuntu-latest
    env:
      TF_WORKSPACE: ${{ inputs.workspace_name }}
      APP_VERSION: ${{ inputs.version_tag }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: unfor19/install-aws-cli-action@e8b481e524a99f37fbd39fdc1dcb3341ab091367 # v1

      - name: Install PHP 8.1
        uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401 # 2.32.0
        with:
          php-version: "8.1.18"

      - name: Set up Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: "3.13.2"

      - name: Install Python packages
        run: |
          pip3 install -r scripts/ci_ingress/requirements.txt

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
        working-directory: ./serve-web

      - name: Cache PHP Dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Composer Install
        run: |
          composer install --no-interaction
        working-directory: ./serve-web

      - name: Create Failure Folder
        run: |
          mkdir -p /tmp/behat

      - name: Retrieve Cluster Config File
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: cluster_config_${{ inputs.workspace_name }}

      - name: Configure OIDC AWS Credentials to get password
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          aws-region: eu-west-1
          role-to-assume: "arn:aws:iam::631181914621:role/oidc-serve-${{ inputs.account_name }}"
          role-duration-seconds: 900
          role-session-name: identity-oidc-serve

      - name: Get Behat password
        env:
          ACCOUNT_ID: ${{ inputs.account_id }}
        run: |
          export BEHAT_PASSWORD=$(python scripts/ci_ingress/get_behat_secret.py)
          echo "::add-mask::$BEHAT_PASSWORD"
          echo BEHAT_PASSWORD=$BEHAT_PASSWORD >> $GITHUB_ENV

      - name: Allow CI ingress
        run: |
          echo $TF_WORKSPACE
          python scripts/ci_ingress/ci_ingress.py cluster_config.json --add

      - name: Run Behat
        env:
          BEHAT_PARAMS: '{"extensions" : {"Behat\\MinkExtension" : {"base_url" : "https://${{ inputs.base_url }}"}}}'
          SIRIUS_S3_BUCKET_NAME: ${{ inputs.sirius_api_bucket }}
        run: |
          vendor/bin/behat --stop-on-failure -c behat.yml.dist ${{ inputs.suite }}
        working-directory: ./serve-web

      - name: Archive Test Output
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: ${{ always() }}
        with:
          name: Behat Outputs
          path: /tmp/behat

      - name: Remove CI ingress
        run: |
          echo $TF_WORKSPACE
          python scripts/ci_ingress/ci_ingress.py cluster_config.json
