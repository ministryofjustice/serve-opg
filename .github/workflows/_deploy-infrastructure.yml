on:
  workflow_call:
    inputs:
      terraform_path:
        description: "The name of the terraform path"
        required: true
        type: string
      workspace:
        description: "Terraform workspace"
        required: true
        type: string
      account_name:
        description: "Account name"
        required: true
        type: string
      container_version:
        description: "Image tag to use"
        required: false
        type: string
        default: ""
      apply:
        description: "Whether to apply terraform"
        required: false
        type: boolean
        default: false
      path_to_live:
        description: "If we are on path to live"
        required: false
        type: boolean
        default: false
jobs:
  terraform_workflow_job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@cbb722410c2e876e24abbe8de2cc27693e501dcb
        with:
          fetch-depth: '0'

      - uses: unfor19/install-aws-cli-action@27d6061dae5d39e89be4d2246824f15e111a7e06

      - id: terraform_version
        name: get terraform version
        uses: ministryofjustice/opg-github-actions/.github/actions/terraform-version@v3.1.0
        with:
          terraform_directory: terraform/${{ inputs.terraform_path }}

      - uses: hashicorp/setup-terraform@344fef46b6edc7c46ce8b3b8b0a3ece7e77e05f0
        with:
          terraform_version: ${{ steps.terraform_version.outputs.version }}
          terraform_wrapper: false

      - name: Configure Terraform OIDC AWS Credentials
        uses: aws-actions/configure-aws-credentials@97834a484a5ab3c40fa9e2eb40fcf8041105a573
        with:
          aws-region: eu-west-1
          role-to-assume: "arn:aws:iam::631181914621:role/oidc-serve-${{ inputs.account_name }}"
          role-duration-seconds: 3600
          role-session-name: terraform-oidc-serve

      - uses: webfactory/ssh-agent@72c0bfd31ab22a2e11716951e3f107a9647dc97e
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_ALLOW_LIST_REPOSITORY }}

      - uses: terraform-linters/setup-tflint@v4
        name: Setup TFLint
        with:
          tflint_version: v0.50.1

      - name: Lint Terraform
        id: tf_lint
        run: tflint --recursive
        working-directory: terraform/${{ inputs.terraform_path }}

      - name: Check formatting
        id: tf_fmt
        run: terraform fmt -check -recursive
        working-directory: terraform/${{ inputs.terraform_path }}

      - name: Terraform Init
        run: |
          terraform --version
          terraform init -input=false
        working-directory: terraform/${{ inputs.terraform_path }}

      - name: Terraform Plan
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
          TF_VAR_APP_VERSION: ${{ inputs.container_version }}
        run: |
          terraform workspace show
          terraform plan -input=false -parallelism=30
        working-directory: terraform/${{ inputs.terraform_path }}

      - name: Register Workspace
        id: terraform_workspace_manager
        if: inputs.apply == true && inputs.terraform_path == 'environment' && inputs.path_to_live == false
        uses: ministryofjustice/opg-github-actions/.github/actions/terraform-workspace-manager@v3.1.0
        with:
          aws_account_id: 705467933182
          aws_iam_role: serve-opg-ci
          register_workspace: ${{ inputs.workspace }}
          time_to_protect: 3
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Apply
        if: inputs.apply == true
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
          TF_VAR_APP_VERSION: ${{ inputs.container_version }}
        run: |
          terraform apply -lock-timeout=300s -input=false -auto-approve -parallelism=30
        working-directory: terraform/${{ inputs.terraform_path }}

      - name: Upload Config
        uses: actions/upload-artifact@v4.4.3
        with:
          name: cluster_config_${{ inputs.workspace }}
          path: ./terraform/environment/cluster_config.json
