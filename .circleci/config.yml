version: 2.1

orbs:
  dockerhub_helper:
    orbs:
      docker: circleci/docker@1.7.0
    commands:
      dockerhub_login:
        steps:
          - docker/install-docker-credential-helper
          - docker/check:
              docker-password: DOCKER_ACCESS_TOKEN
              docker-username: DOCKER_USER

  test:
    commands:
      setup:
        steps:
          - restore_cache:
              keys:
                - vendor-{{ checksum "~/project/serve-web/composer.lock" }}
          - restore_cache:
              keys:
                - node_modules-{{ checksum "~/project/serve-web/yarn.lock" }}
          - run:
              name: Build Dependencies
              command: |
                pip install --quiet awscli
                pyenv rehash

                # Create the s3 buckets
                # & wait for the server to become available
                docker-compose up -d localstack

                docker-compose run --rm waitforit -address=http://localstack:4572 -debug -timeout=30
                docker-compose run --rm aws --endpoint-url=http://localstack:4572 s3 mb s3://sirius-test-bucket
                docker-compose run --rm aws --endpoint-url=http://localstack:4572 s3 mb s3://test-bucket

                # Create dynamodb tables
                docker-compose run --rm aws --region eu-west-1 --endpoint-url=http://localstack:4569 dynamodb create-table --cli-input-json file://attempts_table.json
                docker-compose run --rm aws --region eu-west-1 --endpoint-url=http://localstack:4569 dynamodb create-table --cli-input-json file://sessions_table.json

                # Triggers Symfony Flex to run recipes during composer install - required for phpunit-bridge
                rm -rf ~/project/serve-web/vendor
                rm -rf ~/project/serve-web/symfony.lock

                # Vendor php dependencies
                docker-compose run --rm app composer install --no-interaction

                # Install js dependencies
                docker-compose run --rm yarn install

                # Generate static assets
                docker-compose run --rm yarn build-dev

                # Removes boilerplate feature test added during Symfony Flex recipe for behat
                rm -rf ~/project/serve-web/features/demo.feature
          - save_cache:
              key: vendor-{{ checksum "~/project/serve-web/composer.lock" }}
              paths:
                - vendor
          - save_cache:
              key: node_modules-{{ checksum "~/project/serve-web/yarn.lock" }}
              paths:
                - node_modules
#      Requires test/setup
      unit:
        steps:
          - run:
              name: Unit Test
              command: |
                ~/project/serve-web/generate_certs.sh
                docker-compose -f docker-compose.test.yml -f docker-compose.yml up --build -d loadbalancer
                docker-compose run --rm waitforit -address=tcp://loadbalancer:443 -debug -timeout 120
                docker-compose run --rm waitforit -address=tcp://postgres:5432 -debug
                docker-compose -f docker-compose.test.yml -f docker-compose.yml run --rm app php bin/phpunit --verbose tests --log-junit /var/www/tests/artifacts/phpunit/junit.xml
#      Requires test/setup
      integration:
        steps:
          - run:
              name: Integration Test
              command: |
                sudo chmod -R 777 ~/project/serve-web
                docker-compose -f docker-compose.test.yml -f docker-compose.yml run --rm app php bin/console doctrine:fixtures:load --group=behatTests --purge-with-truncate --no-interaction
                docker-compose -f docker-compose.test.yml -f docker-compose.yml run --rm behat --suite=local

jobs:
  test:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - dockerhub_helper/dockerhub_login
      - test/setup
      - test/unit
      - test/integration
      - store_test_results:
          path: ./tests/artifacts
      - store_artifacts:
          path: /tmp/behat
      - store_artifacts:
          path: ./tests/artifacts

  build:
    machine: true
    steps:
      - add_ssh_keys:
          fingerprints:
          - d5:8c:8f:b5:22:91:45:16:35:49:42:f2:2e:78:a0:5f
      - checkout
      - dockerhub_helper/dockerhub_login
      - run:
          name: Build
          command: |
            # Vendor php dependencies
            docker-compose run --rm app composer install --no-interaction
            # install js dependencies
            docker-compose run --rm yarn install
            # Generate static assets
            docker-compose run --rm yarn build
            # Build app
            docker-compose build web
            docker-compose build app
      - run:
          name: List packages and versions
          command: |
            docker-compose run --rm web apk list | sort
            docker-compose run --rm app apk list | sort
            docker-compose run --rm app php -v
      - run:
          name: Deploy
          command: |
            git tag $CIRCLE_BUILD_NUM
            git push --tags

            docker images
            ./serve-web/docker_login.sh
            docker-compose push app
            docker tag 311462405659.dkr.ecr.eu-west-1.amazonaws.com/serve-opg/app:latest 311462405659.dkr.ecr.eu-west-1.amazonaws.com/serve-opg/app:$CIRCLE_BUILD_NUM
            docker push 311462405659.dkr.ecr.eu-west-1.amazonaws.com/serve-opg/app:$CIRCLE_BUILD_NUM

            docker-compose push web
            docker tag 311462405659.dkr.ecr.eu-west-1.amazonaws.com/serve-opg/web:latest 311462405659.dkr.ecr.eu-west-1.amazonaws.com/serve-opg/web:$CIRCLE_BUILD_NUM
            docker push 311462405659.dkr.ecr.eu-west-1.amazonaws.com/serve-opg/web:$CIRCLE_BUILD_NUM
            curl --silent --show-error --fail -X POST "https://circleci.com/api/v1.1/project/github/ministryofjustice/serve-opg-infrastructure/build?circle-token=${CIRCLE_API_TOKEN}"

workflows:
  version: 2
  build:
    jobs:
      - test:
          filters: { branches: { ignore: [master] } }
      - build:
          filters: { branches: { only: [master] } }

  weekly_integration_run:
    triggers:
      - schedule:
#          Run at 2AM daily
          cron: "0 2 * * *"
          filters: { branches: { only: [ master ] } }
    jobs:
      - test
